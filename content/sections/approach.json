{
    "expands": [
      {
        "title": "Deep, focused, offline work.",
        "content": "Cal Newport doesn’t know me, but I’m his biggest fanboy. I strongly believe that people with non-robot brains must take precautionary measures in order to avoid the suction of the attention economy. Well, if they want to be efficient, anyway.\n\nI’m the fastest project-getter-doner I know… and it’s precisely because I embrace the slowness of a disconnected room and a hot cup of coffee.\n\nI don’t have email on the greyscale phone that I leave at home more than half the time. I don’t have any social media accounts. I literally plan every single computer session with pencil and paper before opening my laptop lid. And my wifi is disabled when I don’t need it (which is most of the time, given the magic of local environments). Maybe I’m more susceptible to this technological distraction than most people? It’s certainly possible. But I think, really, that I’m only more aware of it.\n\nI’m going to die way too soon to spend time pretending to be busy."
      },
      {
        "title": "Building for RESULTS.",
        "content": "All websites, books, products, etc should have a clearly defined purpose (while staying open to iteration) before the build process starts.\n\nWhy are we doing this?\n\nWhat are our values and goals?\n\nWhat and who are we trying to change?\n\nWhat would success look like for us?\n\nAttractive design and clean code is ubiquitous these days. But if you don’t take an emotional deep-dive to answer these questions… who cares? Sure you’ll have a pretty product. But will you have the *right* pretty product?\n\nWhen you start your project by asking and answering these questions, it quickly becomes clear that the “why” is most certainly *not* “to make a cool app” or “to build a pretty website”. So then, we realize that the code is but a means to an end. Whether we end up building something from scratch or pulling off a glorified open source duct-tape job… it makes no difference.\n\nWell, actually, it *does* make a difference. The duct-tape path, when available, wins every time. Because speed. The goal is the result, and any frivolous steps on that journey are a distraction… potentially a monumentally costly one.\n\nFor example, Luxonis needed [a new website](https://luxonis.com/). The “why” was to create a unified front for all of our projects (as they’d been spread out across 3 different websites before that) and to convey technological capability through polished copy and a polished design, so that when people found our Crowd Supply campaign they’d have zero seed of a doubt as to whether or not we could deliver on our promise.\n\nThe purpose was not “to make a website”. Which was a relief, because I had to do this task using only spare hours found ‘neath the cracks between other projects. So rather than *actually* make a website, I just forked [this](https://github.com/creativetimofficial/vue-argon-design-system), made a few tweaks, and called it a day. And as a fun bonus, I got to learn [Vue](https://cli.vuejs.org/guide/), which is now a part of my default stack!\n\nNot dissimilar was the Machine Learning work I did, which was based on the premade  [Deeplabv3+](https://github.com/tensorflow/models/tree/master/research/deeplab) , then trained with a premade dataset, then patched with code almost entirely found on either  [GitHub](https://github.com/)  or  [Stack Overflow](https://stackoverflow.com/) .\n\nSure I *could* make things from scratch. And for many many years I did. I took great pride in doing so, despising WordPress developers and laughing at people who needed frameworks like Bootstrap. I built  [this](https://pickmonitor.com/,  [this](https://dealcatcher.com/), and  [this](https://apps.apple.com/us/app/dealcatcher-coupons-deals-shopping-app/id534634276)  entirely from scratch, for example, even building a custom MVC framework because I was so obsessed with the ego of my custom creations.\n\nThen, through life events such as divorce, failed businesses, therapy, and travel, my ego started to shrivel (but still lingers, obviously) and I realized I was being an idiot. Or more accurately, my static cling to customization was no more than a twisted, illogical attempt at feeling important.\n\nThese days every one of my web projects starts with a framework like Nuxt, Lumen, or Gatsby. Most “custom” designs are merely retoolings of things found on [Sketch Repo](https://sketchrepo.com/). Almost all chunks of code come from GitHub or from places like  [pyimagesearch](https://www.pyimagesearch.com/).\n\nOf course most people use frameworks, so I’m not seeking a cookie for that, but with my allergic reaction to reinventing the wheel I reckon that I spend less than a quarter of the time on your average task than your average creator. AND the results I cobble together are cleaner, faster, prettier, and more secure. Because a GitHub repo built over 8 months - even if it only takes 30 minutes to install, is generally more polished than a solution custom-coded over two weeks.\n\nSo if you’re looking to hire a developer who writes thousands of lines of code per day, pass on me. But if you’re looking to hire someone who gives zero shits about his code count - and instead funnels those shits into big picture results - I’m your guy."
      },
      {
        "title": "Rapid development and iteration.",
        "content": "Cal Newport doesn’t know me, but I’m his biggest fanboy. I strongly believe that people with non-robot brains must take precautionary measures in order to avoid the suction of the attention economy. Well, if they want to be efficient, anyway.\n\nI’m the fastest project-getter-doner I know… and it’s precisely because I move with slow. After all, slow is smooth and smooth is fast, as once said somebody.\n\nI don’t have email on the greyscale phone that I leave at home more than half the time. I don’t have any social media accounts. I literally plan every single computer session with pencil and paper before opening my laptop lid. And my wifi is disabled when I don’t need it (which is most of the time, given the magic of local environments). Maybe I’m more susceptible to this technological distraction than most people? It’s certainly possible. But I think, really, that I’m only more aware of it.\n\nFor most projects I spend at least as much time offline as I do online. I’m going to die way too soon to spend time pretending to be busy."
      }
    ],
    "title": "Approach & Philosophy",
    "intro": "If measured by interest, I'm the shittiest programmer that I know. I don't have accounts on HackerNews or devTo or whatever other places exist these days. I don't tinker with open source projects in my spare time. I have zero interest in casual conversation about tech stacks or hashing algorithms. And whenever I hear tech jargon that I don't understand... I can't even be bothered to look it up. All I can think to myself is WHO THE FUCK CARES!!!\n\nThis isn't an attack on coders, though. It's merely an acceptance that I'm not one of them.\n\nI code only in so much as it helps me get from A to B, whether I'm one of the cool kids or not. And that sums up my general work philosophy: get shit done."
  }